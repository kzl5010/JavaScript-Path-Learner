{"version":3,"sources":["webpack:///webpack/bootstrap 8f6fbecfc20abc570e6a","webpack:///./entry.js","webpack:///./algo.js","webpack:///./graph.js","webpack:///./bfs.js"],"names":["WALL","performance","window","searches","astar","bfs","$","$algoType","$grid","$WallFreq","$graphSize","$showAll","$nextNode","algoType","val","options","WallFreq","graphSize","showAll","is","closest","grid","GraphSolver","search","click","initialize","change","setOption","prop","slideDown","slideUp","css","first","end","brick","path","$graph","implementation","algo","extend","option","showAllVisited","that","nodes","empty","unitWidth","width","unitHeight","height","$cellTemplate","addClass","startSet","x","$row","nodeRow","gridRow","y","id","$cell","clone","attr","append","push","isWall","Math","floor","random","cell_cost","html","graph","$cells","find","chosenNode","$end","removeClass","findNode","hasClass","$first","filter","sTime","now","Date","getTime","fTime","duration","toFixed","length","text","noSolution","traceRoute","each","node","visited","parseInt","timeout","elementFromNode","i","setStartClass","setTimeout","getCost","pathTo","currentNode","parent","unshift","getHeap","BinaryHeap","f","start","clearNodes","heuristic","algorithmic","manhattan","heap","closestNode","h","markVisited","size","pop","closed","neighbors","il","neighbor","gScore","g","beenVisited","rescoreElement","pos0","pos1","d1","abs","d2","cleanNode","scoreFunction","content","prototype","element","sinkDown","result","bubbleUp","remove","indexOf","n","parentN","elemScore","child2N","child1N","swap","child1Score","child1","child2","child2Score","Graph","gridIn","nodeList","row","GridNode","init","visitedNodes","ret","graphString","rowDebug","cost","join","fromNeighbor","mySet","Set","myQueue","shift","undefined"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 8f6fbecfc20abc570e6a","import { astar } from './algo';\nimport Graph from './graph';\nimport { bfs } from './bfs';\n\nlet WALL = 0;\nlet performance = window.performance;\n\nlet searches = {\n  astar: astar,\n  bfs: bfs\n};\n\n$(function() {\n    let $algoType = $(\"#algoType\");\n    let $grid = $(\"#search_grid\");\n    let $WallFreq = $(\"#WallFreq\");\n    let $graphSize = $(\"#graphSize\");\n    let $showAll = $(\"#showAll\");\n    let $nextNode = $(\"#nextNode\");\n    let algoType = $algoType.val();\n\n    let options = {\n        WallFreq: $WallFreq.val(),\n        graphSize: $graphSize.val(),\n        showAll: $showAll.is(\"checked\"),\n        closest: $nextNode.is(\"checked\")\n    };\n\n\n    let grid = new GraphSolver($grid, options, searches[algoType].search, searches[algoType]);\n\n    $(\"#generateGrid\").click(function() {\n        grid.initialize();\n    });\n\n    $algoType.change(function(){\n      grid = new GraphSolver($grid, options, searches[$(this).val()].search, searches[$(this).val()]);\n    });\n\n    $WallFreq.change(function() {\n        grid.setOption({WallFreq: $(this).val()});\n        grid.initialize();\n    });\n\n    $graphSize.change(function() {\n        grid.setOption({graphSize: $(this).val()});\n        grid.initialize();\n    });\n\n    $showAll.change(function() {\n        grid.setOption({showAll: $(this).is(\":checked\")});\n    });\n\n    $nextNode.change(function() {\n        grid.setOption({closest: $(this).is(\":checked\")});\n    });\n\n    $(\"#weighted\").click( function () {\n        if ($(\"#weighted\").prop(\"checked\")) {\n            $('#weightsKey').slideDown();\n        } else {\n            $('#weightsKey').slideUp();\n        }\n    });\n\n});\n\nlet css = { first: \"first\", end: \"end\", brick: \"brick\", path: \"path\" };\n\nclass GraphSolver {\n  constructor($graph, options, implementation, algo) {\n    this.algo = algo;\n    this.$graph = $graph;\n    this.search = implementation;\n    this.options = $.extend({WallFreq:0.1, showAll:true, graphSize:10}, options);\n    this.initialize();\n  }\n  setOption(option) {\n    this.options = $.extend(this.options, option);\n    this.showAllVisited();\n  };\n  initialize() {\n      this.grid = [];\n      let that = this;\n      let nodes = [];\n      let $graph = this.$graph;\n\n      $graph.empty();\n\n      let unitWidth = ($graph.width()/this.options.graphSize)-2;\n      let unitHeight = ($graph.height()/this.options.graphSize)-2;\n      let $cellTemplate = $(\"<span />\").addClass(\"grid_item\").width(unitWidth).height(unitHeight);\n      this.startSet = false;\n\n      for(let x = 0; x < this.options.graphSize; x++) {\n          let $row = $(\"<div class='clear' />\"),\n              nodeRow = [],\n              gridRow = [];\n\n          for(let y = 0; y < this.options.graphSize; y++) {\n              let id = \"cell_\"+x+\"_\"+y,\n                  $cell = $cellTemplate.clone();\n              $cell.attr(\"id\", id).attr(\"x\", x).attr(\"y\", y);\n              $row.append($cell);\n              gridRow.push($cell);\n\n              let isWall = Math.floor(Math.random()*(1/that.options.WallFreq));\n              if(isWall === 0) {\n                  nodeRow.push(WALL);\n                  $cell.addClass(css.brick);\n              }\n              else  {\n                  let cell_cost = ($(\"#weighted\").prop(\"checked\") ? (Math.floor(Math.random() * 3)) * 5 + 1 : 1);\n                  nodeRow.push(cell_cost);\n                  $cell.addClass('weight' + cell_cost);\n                  if ($(\"#displayWeights\").prop(\"checked\")) {\n                      $cell.html(cell_cost);\n                  }\n                  // if (!startSet) {\n                  //     $cell.addClass(css.start);\n                  //     startSet = true;\n                  // }\n              }\n          }\n          $graph.append($row);\n\n          this.grid.push(gridRow);\n          nodes.push(nodeRow);\n      }\n\n      this.graph = new Graph(nodes, this.algo);\n\n      this.$cells = $graph.find(\".grid_item\");\n      this.$cells.click(function() {\n          that.chosenNode($(this));\n      });\n  };\n  chosenNode($end) {\n    $end.removeClass(\"visited\")\n    let end = this.findNode($end);\n\n    if($end.hasClass(css.brick) || $end.hasClass(css.first)) {\n        return;\n    }\n    if (!this.startSet ) {\n      $end.addClass(css.first);\n      this.startSet = true;\n      return;\n    }\n\n    this.$cells.removeClass(css.end);\n    this.$cells.removeClass(\"visited\");\n    this.$cells.removeClass(css.path);\n    $end.addClass(css.end);\n    let $first = this.$cells.filter(\".\" + css.first),\n        first = this.findNode($first);\n\n    let sTime = performance ? performance.now() : new Date().getTime();\n\n    let path = this.search(this.graph, first, end, {\n        closest: this.options.closest\n    });\n    let fTime = performance ? performance.now() : new Date().getTime(),\n        duration = (fTime-sTime).toFixed(2);\n\n    if(path.length === 0) {\n        $(\"#message\").text(\"No solution (\" + duration + \"ms)\");\n        this.noSolution();\n    }\n    else {\n        $(\"#message\").text(\"search took \" + duration + \"ms.\");\n        this.traceRoute(path);\n        this.showAllVisited();\n\n    }\n  };\n  showAllVisited() {\n      this.$cells.html(\" \");\n      let that = this;\n      if(this.options.showAll) {\n          that.$cells.each(function() {\n              let node = that.findNode($(this)),\n                  showAll = false;\n              if (node.visited) {\n                  showAll = true;\n              }\n\n              if (showAll) {\n                  $(this).html(\"visited\");\n                  $(this).addClass(\"visited\");\n              }\n          });\n      }\n  };\n  findNode($cell) {\n    if ($cell.length === 0) {\n      return;\n    }\n    return this.graph.grid[parseInt($cell.attr(\"x\"))][parseInt($cell.attr(\"y\"))];\n\n  };\n  noSolution() {\n      let $graph = this.$graph;\n      this.$cells.removeClass(css.first);\n      this.$cells.removeClass(css.end);\n      this.startSet = false;\n  };\n  traceRoute(path) {\n      let grid = this.grid,\n          timeout = 1000 / grid.length,\n          elementFromNode = function(node) {\n          return grid[node.x][node.y];\n      };\n\n      let that = this;\n      let removeClass = function(path, i) {\n          if(i >= path.length) {\n              return setStartClass(path, i);\n          }\n          // elementFromNode(path[i]).removeClass(css.path);\n          setTimeout(function() {\n              removeClass(path, i+1);\n          }, timeout*path[i].getCost());\n      };\n      let setStartClass = function(path, i) {\n          if(i === path.length) {\n              that.$graph.find(\".\" + css.first).removeClass(css.first);\n              // elementFromNode(path[i-1]).addClass(css.first);\n              that.startSet = false;\n          }\n      };\n      let addClass = function(path, i) {\n          if(i >= path.length) {\n              return removeClass(path, 0);\n          }\n          elementFromNode(path[i]).addClass(css.path);\n          setTimeout(function() {\n              addClass(path, i+1);\n          }, timeout*path[i].getCost());\n      };\n\n      addClass(path, 0);\n      this.$graph.find(\".\" + css.first).removeClass(css.first);\n      this.$graph.find(\".\" + css.end).removeClass(css.end);\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./entry.js","function pathTo(end) {\n  let currentNode = end;\n  let path = [];\n  while (currentNode.parent) {\n    path.unshift(currentNode);\n    currentNode = currentNode.parent;\n  }\n  return path;\n}\n\nfunction getHeap() {\n  return new BinaryHeap(function(node) {\n    return node.f;\n  });\n}\n\nexport const astar = {\n\n  search: function(graph, start, end, options) {\n    graph.clearNodes();\n    options = options || {};\n    let heuristic = astar.algorithmic.manhattan;\n    let closest = options.closest || false;\n\n    let heap = getHeap();\n    let closestNode = start; // set the start node to be the closest if required\n\n    start.h = heuristic(start, end);\n    graph.markVisited(start);\n\n    heap.push(start);\n\n    while (heap.size() > 0) {\n      let currentNode = heap.pop();\n\n      if (currentNode === end) {\n        return pathTo(currentNode);\n      }\n\n      currentNode.closed = true;\n\n      let neighbors = graph.neighbors(currentNode);\n\n      for (let i = 0, il = neighbors.length; i < il; ++i) {\n        let neighbor = neighbors[i];\n\n        if (neighbor.closed || neighbor.isWall()) {\n          continue;\n        }\n\n        let gScore = currentNode.g + neighbor.getCost(currentNode);\n        let beenVisited = neighbor.visited;\n\n        if (!beenVisited || gScore < neighbor.g) {\n\n          neighbor.visited = true;\n          neighbor.parent = currentNode;\n          neighbor.h = neighbor.h || heuristic(neighbor, end);\n          neighbor.g = gScore;\n          neighbor.f = neighbor.g + neighbor.h;\n          graph.markVisited(neighbor);\n          if (closest) {\n            if (neighbor.h < closestNode.h || (neighbor.h === closestNode.h && neighbor.g < closestNode.g)) {\n              closestNode = neighbor;\n            }\n          }\n\n          if (!beenVisited) {\n            heap.push(neighbor);\n          } else {\n            heap.rescoreElement(neighbor);\n          }\n        }\n      }\n    }\n\n    if (closest) {\n      return pathTo(closestNode);\n    }\n\n    return [];\n  },\n  algorithmic: {\n    manhattan: function(pos0, pos1) {\n      let d1 = Math.abs(pos1.x - pos0.x);\n      let d2 = Math.abs(pos1.y - pos0.y);\n      return d1 + d2;\n    }\n  },\n  cleanNode: function(node) {\n    node.f = 0;\n    node.g = 0;\n    node.h = 0;\n    node.visited = false;\n    node.closed = false;\n    node.parent = null;\n  }\n};\n\n\nfunction BinaryHeap(scoreFunction) {\n  this.content = [];\n  this.scoreFunction = scoreFunction;\n}\n\nBinaryHeap.prototype = {\n  push: function(element) {\n    this.content.push(element);\n\n    this.sinkDown(this.content.length - 1);\n  },\n  pop: function() {\n    let result = this.content[0];\n    let end = this.content.pop();\n    if (this.content.length > 0) {\n      this.content[0] = end;\n      this.bubbleUp(0);\n    }\n    return result;\n  },\n  remove: function(node) {\n    let i = this.content.indexOf(node);\n\n    let end = this.content.pop();\n\n    if (i !== this.content.length - 1) {\n      this.content[i] = end;\n\n      if (this.scoreFunction(end) < this.scoreFunction(node)) {\n        this.sinkDown(i);\n      } else {\n        this.bubbleUp(i);\n      }\n    }\n  },\n  size: function() {\n    return this.content.length;\n  },\n  rescoreElement: function(node) {\n    this.sinkDown(this.content.indexOf(node));\n  },\n  sinkDown: function(n) {\n    let element = this.content[n];\n\n    while (n > 0) {\n\n      let parentN = ((n + 1) >> 1) - 1;\n      let parent = this.content[parentN];\n      if (this.scoreFunction(element) < this.scoreFunction(parent)) {\n        this.content[parentN] = element;\n        this.content[n] = parent;\n        n = parentN;\n      }\n      else {\n        break;\n      }\n    }\n  },\n  bubbleUp: function(n) {\n    let length = this.content.length;\n    let element = this.content[n];\n    let elemScore = this.scoreFunction(element);\n\n    while (true) {\n      let child2N = (n + 1) << 1;\n      let child1N = child2N - 1;\n      let swap = null;\n      let child1Score;\n      if (child1N < length) {\n        let child1 = this.content[child1N];\n        child1Score = this.scoreFunction(child1);\n\n        if (child1Score < elemScore) {\n          swap = child1N;\n        }\n      }\n\n      if (child2N < length) {\n        let child2 = this.content[child2N];\n        let child2Score = this.scoreFunction(child2);\n        if (child2Score < (swap === null ? elemScore : child1Score)) {\n          swap = child2N;\n        }\n      }\n\n      if (swap !== null) {\n        this.content[n] = this.content[swap];\n        this.content[swap] = element;\n        n = swap;\n      }\n      else {\n        break;\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./algo.js","import {astar} from './algo';\nimport {bfs} from './bfs';\n\nexport default class Graph {\n  constructor(gridIn, algo, options) {\n    this.algo = algo;\n    options = options || {};\n    this.nodeList = [];\n    this.grid = [];\n    for (let x = 0; x < gridIn.length; x++) {\n      this.grid[x] = [];\n\n      for (let y = 0, row = gridIn[x]; y < row.length; y++) {\n        let node = new GridNode(x, y, row[y]);\n        this.grid[x][y] = node;\n        this.nodeList.push(node);\n      }\n    }\n  this.init();\n  }\n\n  init() {\n    this.visitedNodes = [];\n    for (let i = 0; i < this.nodeList.length; i++) {\n      this.algo.cleanNode(this.nodeList[i]);\n    }\n  };\n\n  clearNodes() {\n    for (let i = 0; i < this.visitedNodes.length; i++) {\n      this.algo.cleanNode(this.visitedNodes[i]);\n    }\n    this.visitedNodes = [];\n  };\n\n\n  markVisited(node) {\n    this.visitedNodes.push(node);\n  };\n\n  neighbors(node) {\n    let ret = [];\n    let x = node.x;\n    let y = node.y;\n    let grid = this.grid;\n\n    if (grid[x - 1] && grid[x - 1][y]) {\n      ret.push(grid[x - 1][y]);\n    }\n\n    if (grid[x + 1] && grid[x + 1][y]) {\n      ret.push(grid[x + 1][y]);\n    }\n\n    if (grid[x] && grid[x][y - 1]) {\n      ret.push(grid[x][y - 1]);\n    }\n\n    if (grid[x] && grid[x][y + 1]) {\n      ret.push(grid[x][y + 1]);\n    }\n    return ret;\n  };\n\n  toString() {\n    let graphString = [];\n    let nodes = this.grid;\n    for (let x = 0; x < nodes.length; x++) {\n      let rowDebug = [];\n      let row = nodes[x];\n      for (let y = 0; y < row.length; y++) {\n        rowDebug.push(row[y].cost);\n      }\n      graphString.push(rowDebug.join(\" \"));\n    }\n    return graphString.join(\"\\n\");\n  };\n}\n\nclass GridNode {\n  constructor(x, y, cost) {\n    this.x = x;\n    this.y = y;\n    this.cost = cost;\n  }\n\n  toString() {\n  return \"[\" + this.x + \" \" + this.y + \"]\";\n  };\n\n  getCost(fromNeighbor) {\n    return this.cost;\n  };\n\n  isWall() {\n    return this.cost === 0;\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./graph.js","function pathTo(end) {\n  let currentNode = end;\n  let path = [];\n  while (currentNode.parent) {\n    path.unshift(currentNode);\n    currentNode = currentNode.parent;\n  }\n  return path;\n}\n\nexport const bfs = {\n\n  search: function(graph, start, end, options) {\n    graph.clearNodes();\n    let closest = options.closest || false;\n\n    let mySet = new Set();\n    let myQueue = [];\n    let closestNode = start; // set the start node to be the closest if required\n\n    graph.markVisited(start);\n\n    myQueue.push(start);\n\n    while (myQueue.length > 0) {\n      let currentNode = myQueue.shift();\n\n      if (currentNode === end) {\n        return pathTo(currentNode);\n      }\n      if (currentNode === undefined) {\n        return [];\n      }\n      currentNode.closed = true;\n\n      let neighbors = graph.neighbors(currentNode);\n\n      for (let i = 0, il = neighbors.length; i < il; ++i) {\n        let neighbor = neighbors[i];\n\n        if (neighbor.closed || neighbor.isWall()) {\n          continue;\n        }\n        let beenVisited = neighbor.visited;\n\n        if (!beenVisited) {\n          myQueue.push(neighbor);\n          neighbor.visited = true;\n          neighbor.parent = currentNode;\n          graph.markVisited(neighbor);\n        }\n      }\n    }\n\n    if (closest) {\n      return pathTo(closestNode);\n    }\n\n    return [];\n  },\n  cleanNode: function(node) {\n    if (node === undefined) {\n      return;\n    }\n    node.visited = false;\n    node.closed = false;\n    node.parent = null;\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./bfs.js"],"sourceRoot":""}