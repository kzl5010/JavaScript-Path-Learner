{"version":3,"sources":["webpack:///webpack/bootstrap f0d448d5721008d6ba52","webpack:///./entry.js","webpack:///./algo.js","webpack:///./graph.js","webpack:///./bfs.js"],"names":["WALL","performance","window","$","$grid","$WallFreq","$GridSize","$showAll","$nextNode","options","WallFreq","val","gridSize","showAll","is","closest","grid","GraphSolver","search","click","initialize","change","setOption","prop","slideDown","slideUp","css","first","end","wall","active","$graph","implementation","extend","option","showAllVisited","that","nodes","empty","cellWidth","width","cellHeight","height","$cellTemplate","addClass","startSet","x","$row","nodeRow","gridRow","y","id","$cell","clone","attr","append","push","isWall","Math","floor","random","cell_cost","html","graph","$cells","find","chosenNode","$end","removeClass","nodeFromElement","hasClass","$first","filter","sTime","now","Date","getTime","path","fTime","duration","toFixed","length","text","noSolution","animatePath","each","node","visited","parseInt","timeout","elementFromNode","i","setStartClass","setTimeout","getCost","pathTo","currentNode","parent","unshift","getHeap","BinaryHeap","f","astar","start","clearNodes","heuristic","algorithmic","manhattan","heap","closestNode","h","markVisited","size","pop","closed","neighbors","il","neighbor","gScore","g","beenVisited","rescoreElement","pos0","pos1","d1","abs","d2","cleanNode","scoreFunction","content","prototype","element","sinkDown","result","bubbleUp","remove","indexOf","n","parentN","elemScore","child2N","child1N","swap","child1Score","child1","child2","child2Score","Graph","gridIn","nodeList","row","GridNode","init","visitedNodes","ret","graphString","rowDebug","cost","join","fromNeighbor","bfs","mySet","Set","myQueue","shift"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap f0d448d5721008d6ba52","import { astar } from './algo';\nimport Graph from './graph';\nimport { bfs } from './bfs';\n\nlet WALL = 0;\nlet performance = window.performance;\n\n$(function() {\n\n    let $grid = $(\"#search_grid\"),\n        $WallFreq = $(\"#WallFreq\"),\n        $GridSize = $(\"#GridSize\"),\n        $showAll = $(\"#showAll\"),\n        $nextNode = $(\"#nextNode\");\n\n    let options = {\n        WallFreq: $WallFreq.val(),\n        gridSize: $GridSize.val(),\n        showAll: $showAll.is(\"checked\"),\n        closest: $nextNode.is(\"checked\")\n    };\n\n    let grid = new GraphSolver($grid, options, bfs.search);\n\n    $(\"#generateGrid\").click(function() {\n        grid.initialize();\n    });\n\n    $WallFreq.change(function() {\n        grid.setOption({WallFreq: $(this).val()});\n        grid.initialize();\n    });\n\n    $GridSize.change(function() {\n        grid.setOption({gridSize: $(this).val()});\n        grid.initialize();\n    });\n\n    $showAll.change(function() {\n        grid.setOption({showAll: $(this).is(\":checked\")});\n    });\n\n    $nextNode.change(function() {\n        grid.setOption({closest: $(this).is(\":checked\")});\n    });\n\n    $(\"#weighted\").click( function () {\n        if ($(\"#weighted\").prop(\"checked\")) {\n            $('#weightsKey').slideDown();\n        } else {\n            $('#weightsKey').slideUp();\n        }\n    });\n\n});\n\nlet css = { first: \"first\", end: \"end\", wall: \"wall\", active: \"active\" };\n\nclass GraphSolver {\n  constructor($graph, options, implementation) {\n    this.$graph = $graph;\n    this.search = implementation;\n    this.options = $.extend({WallFreq:0.1, showAll:true, gridSize:10}, options);\n    this.initialize();\n  }\n  setOption(option) {\n    this.options = $.extend(this.options, option);\n    this.showAllVisited();\n  };\n  initialize() {\n      this.grid = [];\n      let that = this;\n      let nodes = [];\n      let $graph = this.$graph;\n\n      $graph.empty();\n\n      let cellWidth = ($graph.width()/this.options.gridSize)-2; // -2 for border\n      let cellHeight = ($graph.height()/this.options.gridSize)-2;\n      let $cellTemplate = $(\"<span />\").addClass(\"grid_item\").width(cellWidth).height(cellHeight);\n      this.startSet = false;\n\n      for(let x = 0; x < this.options.gridSize; x++) {\n          let $row = $(\"<div class='clear' />\"),\n              nodeRow = [],\n              gridRow = [];\n\n          for(let y = 0; y < this.options.gridSize; y++) {\n              let id = \"cell_\"+x+\"_\"+y,\n                  $cell = $cellTemplate.clone();\n              $cell.attr(\"id\", id).attr(\"x\", x).attr(\"y\", y);\n              $row.append($cell);\n              gridRow.push($cell);\n\n              let isWall = Math.floor(Math.random()*(1/that.options.WallFreq));\n              if(isWall === 0) {\n                  nodeRow.push(WALL);\n                  $cell.addClass(css.wall);\n              }\n              else  {\n                  let cell_cost = ($(\"#weighted\").prop(\"checked\") ? (Math.floor(Math.random() * 3)) * 5 + 1 : 1);\n                  nodeRow.push(cell_cost);\n                  $cell.addClass('weight' + cell_cost);\n                  if ($(\"#displayWeights\").prop(\"checked\")) {\n                      $cell.html(cell_cost);\n                  }\n                  // if (!startSet) {\n                  //     $cell.addClass(css.start);\n                  //     startSet = true;\n                  // }\n              }\n          }\n          $graph.append($row);\n\n          this.grid.push(gridRow);\n          nodes.push(nodeRow);\n      }\n\n      this.graph = new Graph(nodes);\n\n      this.$cells = $graph.find(\".grid_item\");\n      this.$cells.click(function() {\n          that.chosenNode($(this));\n      });\n  };\n  chosenNode($end) {\n    $end.removeClass(\"visited\")\n    let end = this.nodeFromElement($end);\n\n    if($end.hasClass(css.wall) || $end.hasClass(css.first)) {\n        return;\n    }\n    if (!this.startSet ) {\n      $end.addClass(css.first);\n      this.startSet = true;\n      return;\n    }\n\n    this.$cells.removeClass(css.end);\n    this.$cells.removeClass(\"visited\");\n    $end.addClass(css.end);\n    let $first = this.$cells.filter(\".\" + css.first),\n        first = this.nodeFromElement($first);\n\n    let sTime = performance ? performance.now() : new Date().getTime();\n\n    let path = this.search(this.graph, first, end, {\n        closest: this.options.closest\n    });\n    let fTime = performance ? performance.now() : new Date().getTime(),\n        duration = (fTime-sTime).toFixed(2);\n\n    if(path.length === 0) {\n        $(\"#message\").text(\"No solution (\" + duration + \"ms)\");\n        this.noSolution();\n    }\n    else {\n        $(\"#message\").text(\"search took \" + duration + \"ms.\");\n        this.animatePath(path);\n        this.showAllVisited();\n    }\n  };\n  showAllVisited() {\n      this.$cells.html(\" \");\n      let that = this;\n      if(this.options.showAll) {\n          that.$cells.each(function() {\n              let node = that.nodeFromElement($(this)),\n                  showAll = false;\n              if (node.visited) {\n                  showAll = true;\n              }\n\n              if (showAll) {\n                  $(this).html(\"visited\");\n                  $(this).addClass(\"visited\");\n              }\n          });\n      }\n  };\n  nodeFromElement($cell) {\n    if ($cell.length === 0) {\n      return;\n    }\n    return this.graph.grid[parseInt($cell.attr(\"x\"))][parseInt($cell.attr(\"y\"))];\n\n  };\n  noSolution() {\n      let $graph = this.$graph;\n      this.$cells.removeClass(css.first);\n      this.$cells.removeClass(css.end);\n      this.startSet = false;\n  };\n  animatePath(path) {\n      let grid = this.grid,\n          timeout = 1000 / grid.length,\n          elementFromNode = function(node) {\n          return grid[node.x][node.y];\n      };\n\n      let that = this;\n      let removeClass = function(path, i) {\n          if(i >= path.length) {\n              return setStartClass(path, i);\n          }\n          // elementFromNode(path[i]).removeClass(css.active);\n          setTimeout(function() {\n              removeClass(path, i+1);\n          }, timeout*path[i].getCost());\n      };\n      let setStartClass = function(path, i) {\n          if(i === path.length) {\n              that.$graph.find(\".\" + css.first).removeClass(css.first);\n              // elementFromNode(path[i-1]).addClass(css.first);\n              that.startSet = false;\n          }\n      };\n      let addClass = function(path, i) {\n          if(i >= path.length) { // Finished showing path, now remove\n              return removeClass(path, 0);\n          }\n          elementFromNode(path[i]).addClass(css.active);\n          setTimeout(function() {\n              addClass(path, i+1);\n          }, timeout*path[i].getCost());\n      };\n\n      addClass(path, 0);\n      this.$graph.find(\".\" + css.first).removeClass(css.first);\n      this.$graph.find(\".\" + css.end).removeClass(css.end);\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./entry.js","function pathTo(end) {\n  let currentNode = end;\n  let path = [];\n  while (currentNode.parent) {\n    path.unshift(currentNode);\n    currentNode = currentNode.parent;\n  }\n  return path;\n}\n\nfunction getHeap() {\n  return new BinaryHeap(function(node) {\n    return node.f;\n  });\n}\n\nexport const astar = {\n\n  search: function(graph, start, end, options) {\n    graph.clearNodes();\n    options = options || {};\n    let heuristic = astar.algorithmic.manhattan;\n    let closest = options.closest || false;\n\n    let heap = getHeap();\n    let closestNode = start; // set the start node to be the closest if required\n\n    start.h = heuristic(start, end);\n    graph.markVisited(start);\n\n    heap.push(start);\n\n    while (heap.size() > 0) {\n      let currentNode = heap.pop();\n\n      if (currentNode === end) {\n        return pathTo(currentNode);\n      }\n\n      currentNode.closed = true;\n\n      let neighbors = graph.neighbors(currentNode);\n\n      for (let i = 0, il = neighbors.length; i < il; ++i) {\n        let neighbor = neighbors[i];\n\n        if (neighbor.closed || neighbor.isWall()) {\n          continue;\n        }\n\n        let gScore = currentNode.g + neighbor.getCost(currentNode);\n        let beenVisited = neighbor.visited;\n\n        if (!beenVisited || gScore < neighbor.g) {\n\n          neighbor.visited = true;\n          neighbor.parent = currentNode;\n          neighbor.h = neighbor.h || heuristic(neighbor, end);\n          neighbor.g = gScore;\n          neighbor.f = neighbor.g + neighbor.h;\n          graph.markVisited(neighbor);\n          if (closest) {\n            if (neighbor.h < closestNode.h || (neighbor.h === closestNode.h && neighbor.g < closestNode.g)) {\n              closestNode = neighbor;\n            }\n          }\n\n          if (!beenVisited) {\n            heap.push(neighbor);\n          } else {\n            heap.rescoreElement(neighbor);\n          }\n        }\n      }\n    }\n\n    if (closest) {\n      return pathTo(closestNode);\n    }\n\n    return [];\n  },\n  algorithmic: {\n    manhattan: function(pos0, pos1) {\n      let d1 = Math.abs(pos1.x - pos0.x);\n      let d2 = Math.abs(pos1.y - pos0.y);\n      return d1 + d2;\n    }\n  },\n  cleanNode: function(node) {\n    node.f = 0;\n    node.g = 0;\n    node.h = 0;\n    node.visited = false;\n    node.closed = false;\n    node.parent = null;\n  }\n};\n\n\nfunction BinaryHeap(scoreFunction) {\n  this.content = [];\n  this.scoreFunction = scoreFunction;\n}\n\nBinaryHeap.prototype = {\n  push: function(element) {\n    this.content.push(element);\n\n    this.sinkDown(this.content.length - 1);\n  },\n  pop: function() {\n    let result = this.content[0];\n    let end = this.content.pop();\n    if (this.content.length > 0) {\n      this.content[0] = end;\n      this.bubbleUp(0);\n    }\n    return result;\n  },\n  remove: function(node) {\n    let i = this.content.indexOf(node);\n\n    let end = this.content.pop();\n\n    if (i !== this.content.length - 1) {\n      this.content[i] = end;\n\n      if (this.scoreFunction(end) < this.scoreFunction(node)) {\n        this.sinkDown(i);\n      } else {\n        this.bubbleUp(i);\n      }\n    }\n  },\n  size: function() {\n    return this.content.length;\n  },\n  rescoreElement: function(node) {\n    this.sinkDown(this.content.indexOf(node));\n  },\n  sinkDown: function(n) {\n    let element = this.content[n];\n\n    while (n > 0) {\n\n      let parentN = ((n + 1) >> 1) - 1;\n      let parent = this.content[parentN];\n      if (this.scoreFunction(element) < this.scoreFunction(parent)) {\n        this.content[parentN] = element;\n        this.content[n] = parent;\n        n = parentN;\n      }\n      else {\n        break;\n      }\n    }\n  },\n  bubbleUp: function(n) {\n    let length = this.content.length;\n    let element = this.content[n];\n    let elemScore = this.scoreFunction(element);\n\n    while (true) {\n      let child2N = (n + 1) << 1;\n      let child1N = child2N - 1;\n      let swap = null;\n      let child1Score;\n      if (child1N < length) {\n        let child1 = this.content[child1N];\n        child1Score = this.scoreFunction(child1);\n\n        if (child1Score < elemScore) {\n          swap = child1N;\n        }\n      }\n\n      if (child2N < length) {\n        let child2 = this.content[child2N];\n        let child2Score = this.scoreFunction(child2);\n        if (child2Score < (swap === null ? elemScore : child1Score)) {\n          swap = child2N;\n        }\n      }\n\n      if (swap !== null) {\n        this.content[n] = this.content[swap];\n        this.content[swap] = element;\n        n = swap;\n      }\n      else {\n        break;\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./algo.js","import {astar} from './algo';\n\nexport default class Graph {\n  constructor(gridIn, options) {\n    options = options || {};\n    this.nodeList = [];\n    this.grid = [];\n    for (let x = 0; x < gridIn.length; x++) {\n      this.grid[x] = [];\n\n      for (let y = 0, row = gridIn[x]; y < row.length; y++) {\n        let node = new GridNode(x, y, row[y]);\n        this.grid[x][y] = node;\n        this.nodeList.push(node);\n      }\n    }\n  this.init();\n  }\n\n  init() {\n    this.visitedNodes = [];\n    for (let i = 0; i < this.nodeList.length; i++) {\n      astar.cleanNode(this.nodeList[i]);\n    }\n  };\n\n  clearNodes() {\n    for (let i = 0; i < this.visitedNodes.length; i++) {\n      astar.cleanNode(this.visitedNodes[i]);\n    }\n    this.visitedNodes = [];\n  };\n\n\n  markVisited(node) {\n    this.visitedNodes.push(node);\n  };\n\n  neighbors(node) {\n    let ret = [];\n    let x = node.x;\n    let y = node.y;\n    let grid = this.grid;\n\n    if (grid[x - 1] && grid[x - 1][y]) {\n      ret.push(grid[x - 1][y]);\n    }\n\n    if (grid[x + 1] && grid[x + 1][y]) {\n      ret.push(grid[x + 1][y]);\n    }\n\n    if (grid[x] && grid[x][y - 1]) {\n      ret.push(grid[x][y - 1]);\n    }\n\n    if (grid[x] && grid[x][y + 1]) {\n      ret.push(grid[x][y + 1]);\n    }\n    return ret;\n  };\n\n  toString() {\n    let graphString = [];\n    let nodes = this.grid;\n    for (let x = 0; x < nodes.length; x++) {\n      let rowDebug = [];\n      let row = nodes[x];\n      for (let y = 0; y < row.length; y++) {\n        rowDebug.push(row[y].cost);\n      }\n      graphString.push(rowDebug.join(\" \"));\n    }\n    return graphString.join(\"\\n\");\n  };\n}\n\nclass GridNode {\n  constructor(x, y, cost) {\n    this.x = x;\n    this.y = y;\n    this.cost = cost;\n  }\n\n  toString() {\n  return \"[\" + this.x + \" \" + this.y + \"]\";\n  };\n\n  getCost(fromNeighbor) {\n    return this.cost;\n  };\n\n  isWall() {\n    return this.cost === 0;\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./graph.js","function pathTo(end) {\n  let currentNode = end;\n  let path = [];\n  while (currentNode.parent) {\n    path.unshift(currentNode);\n    currentNode = currentNode.parent;\n  }\n  return path;\n}\n\nexport const bfs = {\n\n  search: function(graph, start, end, options) {\n    graph.clearNodes();\n    let closest = options.closest || false;\n\n    let mySet = new Set();\n    let myQueue = [];\n    let closestNode = start; // set the start node to be the closest if required\n\n    graph.markVisited(start);\n\n    myQueue.push(start);\n\n    while (myQueue.length > 0) {\n      let currentNode = myQueue.shift();\n\n      if (currentNode === end) {\n        return pathTo(currentNode);\n      }\n\n      currentNode.closed = true;\n\n      let neighbors = graph.neighbors(currentNode);\n\n      for (let i = 0, il = neighbors.length; i < il; ++i) {\n        let neighbor = neighbors[i];\n\n        if (neighbor.closed || neighbor.isWall()) {\n          continue;\n        }\n        let beenVisited = neighbor.visited;\n\n        if (!beenVisited) {\n          myQueue.push(neighbor);\n          neighbor.visited = true;\n          neighbor.parent = currentNode;\n          graph.markVisited(neighbor);\n        }\n      }\n    }\n\n    if (closest) {\n      return pathTo(closestNode);\n    }\n\n    return [];\n  },\n  cleanNode: function(node) {\n    node.visited = false;\n    node.closed = false;\n    node.parent = null;\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./bfs.js"],"sourceRoot":""}